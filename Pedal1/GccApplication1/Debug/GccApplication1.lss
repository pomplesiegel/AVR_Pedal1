
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000074  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000074  000000e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000e8  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000038  00000000  00000000  00000118  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000127  00000000  00000000  00000150  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000c5  00000000  00000000  00000277  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000084  00000000  00000000  0000033c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000054  00000000  00000000  000003c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001af  00000000  00000000  00000414  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000026  00000000  00000000  000005c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000028  00000000  00000000  000005e9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	0e c0       	rjmp	.+28     	; 0x20 <__bad_interrupt>
   4:	0d c0       	rjmp	.+26     	; 0x20 <__bad_interrupt>
   6:	0c c0       	rjmp	.+24     	; 0x20 <__bad_interrupt>
   8:	0b c0       	rjmp	.+22     	; 0x20 <__bad_interrupt>
   a:	0a c0       	rjmp	.+20     	; 0x20 <__bad_interrupt>
   c:	09 c0       	rjmp	.+18     	; 0x20 <__bad_interrupt>
   e:	08 c0       	rjmp	.+16     	; 0x20 <__bad_interrupt>
  10:	07 c0       	rjmp	.+14     	; 0x20 <__bad_interrupt>
  12:	06 c0       	rjmp	.+12     	; 0x20 <__bad_interrupt>

00000014 <__ctors_end>:
  14:	11 24       	eor	r1, r1
  16:	1f be       	out	0x3f, r1	; 63
  18:	cf e9       	ldi	r28, 0x9F	; 159
  1a:	cd bf       	out	0x3d, r28	; 61
  1c:	21 d0       	rcall	.+66     	; 0x60 <main>
  1e:	28 c0       	rjmp	.+80     	; 0x70 <_exit>

00000020 <__bad_interrupt>:
  20:	ef cf       	rjmp	.-34     	; 0x0 <__vectors>

00000022 <_Z6TurnOni>:

//Turn on the pin of this #define name or number
//By our convention, 'on' means this pin will have a value of Vcc Volts
void TurnOn(int pinNumber)
{
	PORTB |= (1 << pinNumber); // Set 0 on pinNumber pin (turn on this port)
  22:	48 b3       	in	r20, 0x18	; 24
  24:	21 e0       	ldi	r18, 0x01	; 1
  26:	30 e0       	ldi	r19, 0x00	; 0
  28:	b9 01       	movw	r22, r18
  2a:	02 c0       	rjmp	.+4      	; 0x30 <_Z6TurnOni+0xe>
  2c:	66 0f       	add	r22, r22
  2e:	77 1f       	adc	r23, r23
  30:	8a 95       	dec	r24
  32:	e2 f7       	brpl	.-8      	; 0x2c <_Z6TurnOni+0xa>
  34:	cb 01       	movw	r24, r22
  36:	84 2b       	or	r24, r20
  38:	88 bb       	out	0x18, r24	; 24
  3a:	08 95       	ret

0000003c <_Z7TurnOffi>:

//Turn off the pin of this #define name or number
//By our convention, 'off' means this pin will have a value of 0 Volts
void TurnOff(int pinNumber)
{
	PORTB &= ~(1 << pinNumber); // Set 1 on pinNumber pin (turn off this port)
  3c:	98 b3       	in	r25, 0x18	; 24
  3e:	21 e0       	ldi	r18, 0x01	; 1
  40:	30 e0       	ldi	r19, 0x00	; 0
  42:	02 c0       	rjmp	.+4      	; 0x48 <__SREG__+0x9>
  44:	22 0f       	add	r18, r18
  46:	33 1f       	adc	r19, r19
  48:	8a 95       	dec	r24
  4a:	e2 f7       	brpl	.-8      	; 0x44 <__SREG__+0x5>
  4c:	20 95       	com	r18
  4e:	92 23       	and	r25, r18
  50:	98 bb       	out	0x18, r25	; 24
  52:	08 95       	ret

00000054 <_Z17InitGPIODirectionv>:
}

void InitGPIODirection()
{
	//inputs - SET input direction on all of these pins
	DDRB &= ~(1<<SWT); // Set input direction on SWT
  54:	b8 98       	cbi	0x17, 0	; 23
	
	//outputs - SET output direction on all of these pins
	DDRB |= (1 << RELAY_PLUS); // Set output direction on LED (PB0) *2
  56:	b9 9a       	sbi	0x17, 1	; 23
	DDRB |= (1 << RELAY_NEG); 
  58:	ba 9a       	sbi	0x17, 2	; 23
	DDRB |= (1 << LED); 
  5a:	bb 9a       	sbi	0x17, 3	; 23
	DDRB |= (1 << FET_MUTE); 
  5c:	bc 9a       	sbi	0x17, 4	; 23
  5e:	08 95       	ret

00000060 <main>:



int main(void)
{
	InitGPIODirection();
  60:	f9 df       	rcall	.-14     	; 0x54 <_Z17InitGPIODirectionv>
	
	
    while(1)
    {
        //TODO:: Please write your application code 
		TurnOn(LED);
  62:	83 e0       	ldi	r24, 0x03	; 3
  64:	90 e0       	ldi	r25, 0x00	; 0
  66:	dd df       	rcall	.-70     	; 0x22 <_Z6TurnOni>
		TurnOff(LED);
  68:	83 e0       	ldi	r24, 0x03	; 3
  6a:	90 e0       	ldi	r25, 0x00	; 0
  6c:	e7 df       	rcall	.-50     	; 0x3c <_Z7TurnOffi>
  6e:	f9 cf       	rjmp	.-14     	; 0x62 <main+0x2>

00000070 <_exit>:
  70:	f8 94       	cli

00000072 <__stop_program>:
  72:	ff cf       	rjmp	.-2      	; 0x72 <__stop_program>
